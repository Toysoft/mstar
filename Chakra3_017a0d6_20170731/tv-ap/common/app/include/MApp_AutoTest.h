//<MStar Software>
//******************************************************************************
// MStar Software
// Copyright (c) 2010 - 2012 MStar Semiconductor, Inc. All rights reserved.
// All software, firmware and related documentation herein ("MStar Software") are
// intellectual property of MStar Semiconductor, Inc. ("MStar") and protected by
// law, including, but not limited to, copyright law and international treaties.
// Any use, modification, reproduction, retransmission, or republication of all
// or part of MStar Software is expressly prohibited, unless prior written
// permission has been granted by MStar.
//
// By accessing, browsing and/or using MStar Software, you acknowledge that you
// have read, understood, and agree, to be bound by below terms ("Terms") and to
// comply with all applicable laws and regulations:
//
// 1. MStar shall retain any and all right, ownership and interest to MStar
//    Software and any modification/derivatives thereof.
//    No right, ownership, or interest to MStar Software and any
//    modification/derivatives thereof is transferred to you under Terms.
//
// 2. You understand that MStar Software might include, incorporate or be
//    supplied together with third party`s software and the use of MStar
//    Software may require additional licenses from third parties.
//    Therefore, you hereby agree it is your sole responsibility to separately
//    obtain any and all third party right and license necessary for your use of
//    such third party`s software.
//
// 3. MStar Software and any modification/derivatives thereof shall be deemed as
//    MStar`s confidential information and you agree to keep MStar`s
//    confidential information in strictest confidence and not disclose to any
//    third party.
//
// 4. MStar Software is provided on an "AS IS" basis without warranties of any
//    kind. Any warranties are hereby expressly disclaimed by MStar, including
//    without limitation, any warranties of merchantability, non-infringement of
//    intellectual property rights, fitness for a particular purpose, error free
//    and in conformity with any international standard.  You agree to waive any
//    claim against MStar for any loss, damage, cost or expense that you may
//    incur related to your use of MStar Software.
//    In no event shall MStar be liable for any direct, indirect, incidental or
//    consequential damages, including without limitation, lost of profit or
//    revenues, lost or damage of data, and unauthorized system use.
//    You agree that this Section 4 shall still apply without being affected
//    even if MStar Software has been modified by MStar in accordance with your
//    request or instruction for your use, except otherwise agreed by both
//    parties in writing.
//
// 5. If requested, MStar may from time to time provide technical supports or
//    services in relation with MStar Software to you for your use of
//    MStar Software in conjunction with your or your customer`s product
//    ("Services").
//    You understand and agree that, except otherwise agreed by both parties in
//    writing, Services are provided on an "AS IS" basis and the warranty
//    disclaimer set forth in Section 4 above shall apply.
//
// 6. Nothing contained herein shall be construed as by implication, estoppels
//    or otherwise:
//    (a) conferring any license or right to use MStar name, trademark, service
//        mark, symbol or any other identification;
//    (b) obligating MStar or any of its affiliates to furnish any person,
//        including without limitation, you and your customers, any assistance
//        of any kind whatsoever, or any information; or
//    (c) conferring any license or right under any intellectual property right.
//
// 7. These terms shall be governed by and construed in accordance with the laws
//    of Taiwan, R.O.C., excluding its conflict of law rules.
//    Any and all dispute arising out hereof or related hereto shall be finally
//    settled by arbitration referred to the Chinese Arbitration Association,
//    Taipei in accordance with the ROC Arbitration Law and the Arbitration
//    Rules of the Association by three (3) arbitrators appointed in accordance
//    with the said Rules.
//    The place of arbitration shall be in Taipei, Taiwan and the language shall
//    be English.
//    The arbitration award shall be final and binding to both parties.
//
//******************************************************************************
//<MStar Software>

#ifndef MAPP_AUTOTEST_H
#define MAPP_AUTOTEST_H


#include "Board.h"

#if( CHAKRA3_AUTO_TEST )

#define AUTO_TEST_VERSION   20161129


#define AT_IR_SIM   DISABLE //for developer

#include "MApp_GlobalFunction.h"
#include "apiAUDIO.h"

//#include "ZUI_exefunc.h"

#ifdef MAPP_AUTOTEST_C
    #define INTERFACE
#else
    #define INTERFACE extern
#endif

#define DEBUG_AUTOTEST(x)   x

//---------------------------------------------------------------------------
//      Macro and Define
//---------------------------------------------------------------------------
#define AT_CMD_HEADER           "at+wtest="
#define AT_STATUS_START         "MSTART"
#define AT_RESPONSE_START_ACK   "*MSACK*"
#define AT_RESPONSE_END_ACK     "%MSACK%"
#define AT_STATUS_ACK           "MACK"
#define AT_RESPONSE_START_SIG   "*MS*"
#define AT_RESPONSE_END_SIG     "%MS%"
#define AT_STATUS_OK            "MOK"
#define AT_STATUS_ER            "MER"

#define AT_MAX_CMD_PARA             3 //Increase if necessary.
#define AT_MAX_CMD_NUM              (AT_MAX_CMD_PARA+2) //Cmd and SubCmd
#define AT_CMD_PARSE_BEGIN_INDEX    9 //"at+wtest=" is cmd header

#define ASCII_NULL      0x0
#define ASCII_BACKSPACE 0x08
#define ASCII_ENTER     0x0D
#define ASCII_COMMA     0x2C
#define ASCII_NUMBER_0  0x30
#define ASCII_NUMBER_9  0x39

#define MAX_EVENT_NAME  255

//---------------------------------------------------------------------------
//      Type and Structure
//---------------------------------------------------------------------------

typedef enum
{
    EN_AUTO_TEST_CMD_TYPE_KEY_SHORT_PRESS_CMD = 15,
    EN_AUTO_TEST_CMD_TYPE_KEY_LONG_PRESS_CMD = 16,
    EN_AUTO_TEST_CMD_TYPE_DIRECT_CMD = 17,
    EN_AUTO_TEST_CMD_TYPE_SI_CMD = 18,
    EN_AUTO_TEST_CMD_TYPE_TTX_CMD = 19,
    EN_AUTO_TEST_CMD_TYPE_AUDIO_CMD = 20,
    EN_AUTO_TEST_CMD_TYPE_MISC_CMD = 21,
    EN_AUTO_TEST_CMD_TYPE_SUBTITLE_CMD = 22,
    EN_AUTO_TEST_CMD_TYPE_CI_CMD = 23,
    EN_AUTO_TEST_CMD_TYPE_OSD_DUMP_CMD = 24,
    EN_AUTO_TEST_CMD_TYPE_EPG_CMD = 25,
    EN_AUTO_TEST_CMD_TYPE_PVR_CMD = 26,
    EN_AUTO_TEST_CMD_TYPE_MM_MOVIE_CMD = 27,
    EN_AUTO_TEST_CMD_TYPE_MM_MUSIC_CMD = 28,
    EN_AUTO_TEST_CMD_TYPE_MM_PHOTO_CMD = 29,
    EN_AUTO_TEST_CMD_TYPE_APP_CMD = 30,
    EN_AUTO_TEST_CMD_TYPE_HBBTV_CMD = 31,
    EN_AUTO_TEST_CMD_TYPE_OAD_CMD = 32,
    EN_AUTO_TEST_CMD_TYPE_CLOCK_CMD = 33,
    EN_AUTO_TEST_CMD_TYPE_CC_CMD = 34,
    EN_AUTO_TEST_CMD_TYPE_NETWORK_CMD = 35,
    EN_AUTO_TEST_CMD_TYPE_VIDEO_CMD = 36,
    EN_AUTO_TEST_CMD_TYPE_FACTORYMODE_CMD = 37
}EN_AT_CMD_TYPE;

typedef enum
{
    EN_AUTO_TEST_DIRECT_CMD_SET_INPUT_SOURCE = 1,
    EN_AUTO_TEST_DIRECT_CMD_GET_INPUT_SIGNAL = 2,
    EN_AUTO_TEST_DIRECT_CMD_DTV_SCAN = 3,
    EN_AUTO_TEST_DIRECT_CMD_ATV_SCAN = 4,
    EN_AUTO_TEST_DIRECT_CMD_GET_DTV_CHANNEL_LIST = 5,
    EN_AUTO_TEST_DIRECT_CMD_GET_ATV_CHANNEL_LIST = 6,
    EN_AUTO_TEST_DIRECT_CMD_SET_AMP = 7,
    EN_AUTO_TEST_DIRECT_CMD_GET_INPUT_SOURCE = 8,
    EN_AUTO_TEST_DIRECT_CMD_SET_AUTO_SCART = 9,
    EN_AUTO_TEST_DIRECT_CMD_VIDEO_CHECK = 10,
    EN_AUTO_TEST_DIRECT_CMD_DTV_DIRECT_SCAN = 11,
    EN_AUTO_TEST_DIRECT_CMD_ATV_DIRECT_SCAN = 12,
    EN_AUTO_TEST_DIRECT_CMD_OPEN_USB_LOG=13,
    EN_AUTO_TEST_DIRECT_CMD_ATSC_AIR_CABLE = 20,
    EN_AUTO_TEST_DIRECT_CMD_GET_ATSC_AIR_CABLE = 21,
    EN_AUTO_TEST_DIRECT_CMD_GET_ATSC_CHANNEL_LIST = 22,
    EN_AUTO_TEST_DIRECT_CMD_ATV_GET_FREQUENCY = 23,
    EN_AUTO_TEST_DIRECT_CMD_GET_VIDEO_STATE = 24,
    EN_AUTO_TEST_DIRECT_CMD_GET_ATV_STAND = 25,
    EN_AUTO_TEST_DIRECT_CMD_GET_ASPECT_RATIO = 26,
    EN_AUTO_TEST_DIRECT_CMD_SET_ASPECT_RATIO = 27,
    EN_AUTO_TEST_DIRECT_CMD_DTV_SIGNAL = 28,
    EN_AUTO_TEST_DIRECT_CMD_ATV_SIGNAL = 29,
    EN_AUTO_TEST_DIRECT_CMD_DELETE_ALL_CHANNEL = 30,
    EN_AUTO_TEST_DIRECT_CMD_GET_SYS_ROUTE = 88,
    EN_AUTO_TEST_DIRECT_CMD_SET_SYS_ROUTE = 89,
    EN_AUTO_TEST_DIRECT_CMD_DVBC_OPERATOR = 90,
    EN_AUTO_TEST_DIRECT_CMD_DVBS_SCAN = 91,
    EN_AUTO_TEST_DIRECT_CMD_SELECT_DTV_CHANNEL = 92,
    EN_AUTO_TEST_DIRECT_CMD_KERNEL_MODE = 93,
    EN_AUTO_TEST_DIRECT_CMD_ATV_SAVE_PROGRAM = 94,

    // todo
    EN_AUTO_TEST_DIRECT_CMD_ATSC_SCAN   = 101,
    EN_AUTO_TEST_DIRECT_CMD_ISDB_SCAN   = 102,


}EN_AT_DIRECT_CMD;

typedef enum
{
    EN_AUTO_TEST_SI_CMD_GET_CURRENT_SERVERICE_NAME = 1,
    EN_AUTO_TEST_SI_CMD_GET_ALL_LOGICAL_NUMBER = 2,
    EN_AUTO_TEST_SI_CMD_GET_CURRENT_EVENT_INFO_NOW = 3,
    EN_AUTO_TEST_SI_CMD_GET_CURRENT_EVENT_INFO_NEXT = 4,
    EN_AUTO_TEST_SI_CMD_GET_LOCAL_TIME = 5,
    EN_AUTO_TEST_SI_CMD_GET_VOLUME = 6,
    EN_AUTO_TEST_SI_CMD_SET_SLEEP_TIME = 7,
    EN_AUTO_TEST_SI_CMD_GET_OSD_LANGUAGE = 8,
    EN_AUTO_TEST_SI_CMD_DELETE_PROGRAM_EVENT = 9,
    EN_AUTO_TEST_SI_CMD_GET_SIGNAL_INFORMATION = 10,
    EN_AUTO_TEST_SI_CMD_GET_GENRE_TYPE = 11,
    EN_AUTO_TEST_SI_CMD_GET_OSD_COUNTRY = 12,
    EN_AUTO_TEST_SI_CMD_SET_PROGRAM_LOCK= 13,
    EN_AUTO_TEST_SI_CMD_SET_BLOCK_PROGRAM_PASSWORD = 14,
    EN_AUTO_TEST_SI_CMD_SYSTEM_LOCK = 15,
    EN_AUTO_TEST_SI_CMD_PARENTAL_CONTROL = 16,
    EN_AUTO_TEST_SI_CMD_GET_VIDEO_INFO = 17,
    EN_AUTO_TEST_SI_CMD_SET_VOLUME = 18,
    EN_AUTO_TEST_SI_CMD_GET_VOLUME_MUTE_STATUS = 19,
}EN_AT_SI_CMD;

/// AUDIO AUTOTEST
typedef enum
{
    EN_AUTO_TEST_AUD_CMD_IS_DTV_DECODE_OK = 1,
    EN_AUTO_TEST_AUD_CMD_GET_DTV_TYPE = 2,
    EN_AUTO_TEST_AUD_CMD_GET_ATV_SND_MODE = 3,
    EN_AUTO_TEST_AUD_CMD_IS_ATV_DECODE_OK = 4,
    EN_AUTO_TEST_AUD_CMD_GET_CURRENT_AUDIO_LANGUAGE = 5,
    EN_AUTO_TEST_AUD_CMD_GET_AUDIO_PRIMARY_LANGUAGE = 6,
    EN_AUTO_TEST_AUD_CMD_GET_AUDIO_SECONDARY_LANGUAGE = 7,
    EN_AUTO_TEST_AUD_CMD_GET_AUDIO_TYPE_LIST = 8,
    EN_AUTO_TEST_AUD_CMD_GET_AUDIO_MUTE_STATE = 9,
    EN_AUTO_TEST_AUD_CMD_SET_AUDIO_PEQ = 10,

    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MAPI_AUDIO_LEVEL0_EMERG = 11,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MAPI_AUDIO_LEVEL1_ALERT = 12,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MAPI_AUDIO_LEVEL2_CRIT = 13,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MAPI_AUDIO_LEVEL3_ERR = 14,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MAPI_AUDIO_LEVEL4_WARNING = 15,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MAPI_AUDIO_LEVEL5_NOTICE = 16,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MAPI_AUDIO_LEVEL6_INFO = 17,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MAPI_AUDIO_LEVEL7_DEBUG = 18,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MAPI_AUDIO_LEVEL_MAX = 19,

    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MSRV_SSSOUND_LEVEL0_EMERG = 20,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MSRV_SSSOUND_LEVEL1_ALERT = 21,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MSRV_SSSOUND_LEVEL2_CRIT = 22,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MSRV_SSSOUND_LEVEL3_ERR = 23,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MSRV_SSSOUND_LEVEL4_WARNING = 24,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MSRV_SSSOUND_LEVEL5_NOTICE = 25,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MSRV_SSSOUND_LEVEL6_INFO = 26,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MSRV_SSSOUND_LEVEL7_DEBUG = 27,
    EN_AUTO_TEST_AUD_CMD_DEBUG_MSG_MSRV_SSSOUND_LEVEL_MAX = 28,

    EN_AUTO_TEST_AUD_CMD_GET_SOUND_BALANCE = 29,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_BALANCE = 30,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_BASS = 31,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_BASS = 32,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_TREBLE = 33,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_TREBLE = 34,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_TV_MOUNTING_MODE = 35,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_TV_MOUNTING_MODE = 36,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_DYNAMIC_VOLUME = 37,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_DYNAMIC_VOLUME = 38,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_AUDYSSEY_EQ = 39,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_AUDYSSEY_EQ = 40,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_AUDYSSEY_ABX = 41,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_AUDYSSEY_ABX = 42,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_AUDYSSEY_VXT = 43,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_AUDYSSEY_VXT = 44,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_VOICE_ENHANCEMENT = 45,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_VOICE_ENHANCEMENT = 46,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_BASS_BOOST = 47,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_BASS_BOOST = 48,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_STABLE = 49,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_STABLE = 50,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_DYNAMIC_RANGE_CONTROL = 51,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_DYNAMIC_RANGE_CONTROL = 52,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_DUAL_MODE = 53,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_DUAL_MODE = 54,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_AUDIO_LEVEL_OFFSET = 55,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_AUDIO_LEVEL_OFFSET = 56,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_TV_SPEAKER = 57,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_TV_SPEAKER = 58,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_SPEAKER_LINK = 59,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_SPEAKER_LINK = 60,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_HEADPHONE_LEVEL = 61,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_HEADPHONE_LEVEL = 62,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_AUDIO_DESCRIPTION = 63,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_AUDIO_DESCRIPTION = 64,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_MIXING_LEVEL = 65,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_MIXING_LEVEL = 66,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_MTS_MODE = 67,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_MTS_MODE = 68,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_DIGITAL_AUDIO_SELECTION = 69,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_DIGITAL_AUDIO_SELECTION = 70,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_AUDIO_FORMAT = 71,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_AUDIO_FORMAT = 72,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_AUDIO_DELAY = 73,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_AUDIO_DELAY = 74,
    EN_AUTO_TEST_AUD_CMD_GET_SOUND_AUDIO_ADJUSTMENT  = 75,
    EN_AUTO_TEST_AUD_CMD_SET_SOUND_AUDIO_ADJUSTMENT  = 76,
    EN_AUTO_TEST_AUD_CMD_SET_ADVSOUND_PROCESS_ENABLE= 77,
    EN_AUTO_TEST_AUD_CMD_SET_ADVSOUND_SUBPROCESS_ENABLE= 78,
    EN_AUTO_TEST_AUD_CMD_SET_ADVSOUND_SETPARAM  = 79,
} EN_AT_AUDIO_CMD;

typedef enum
{
    EN_AUTO_TEST_SUBTITLE_ENABLE = 1,
    EN_AUTO_TEST_SUBTITLE_DISABLE = 2,
    EN_AUTO_TEST_SUBTITLE_HH_ENABLE = 3,
    EN_AUTO_TEST_SUBTITLE_HH_DISABLE = 4,
    EN_AUTO_TEST_SUBTITLE_GET_CURRENT_LANGUAGE = 5,
    EN_AUTO_TEST_SUBTITLE_GET_LANGUAGE_LIST = 6,
    EN_AUTO_TEST_SUBTITLE_GET_PRIMARY_LANGUAGE = 7,
    EN_AUTO_TEST_SUBTITLE_GET_SECONDARY_LANGUAGE = 8,
    EN_AUTO_TEST_SUBTITLE_GET_STATUS= 9,
    EN_AUTO_TEST_SUBTITLE_GET_CURRENT_TYPE = 10,
} EN_AT_SUBTITLE_CMD;

typedef enum
{
    E_SUBTITLE_TYPE = 0,
    E_SUBTITLE_LAN = 1,
} EN_SUBTITLE_INFORMATION;

typedef enum
{
    E_LCN_LIST = 0,
    E_SERVICE_TYPE_LIST = 1,
    E_SERVICE_NAME_LIST = 2,
} EN_CHANNEL_LIST_INFORMATION;

typedef enum
{
    E_GET_VIDEO_AUDIO_TYPE = 0,
    E_GET_VIDEO_RESOLUTION = 1,
    E_GET_VIDEO_QUALITY = 2,
} EN_VIDEO_INFORMATION;

typedef enum
{
    E_EPG_TOTAL_INFO = 0,
    E_EPG_LCN = 1,
    E_EPG_CHANNEL_NAME = 2,
} EN_EPG_INFORMATION;

typedef enum
{
    EN_AUTO_TEST_CI_CMD_CARD_INSERT = 1,
    EN_AUTO_TEST_CI_CMD_CARD_REMOVE = 2,
    EN_AUTO_TEST_CI_CMD_ENTER_MENU = 3,
    EN_AUTO_TEST_CI_CMD_GET_CIMMI = 4,
    EN_AUTO_TEST_CI_CMD_ANSWER_MENU = 5,
    EN_AUTO_TEST_CI_CMD_EXIT_MENU = 6,
    EN_AUTO_TEST_CI_CMD_GET_HSS = 7,
    EN_AUTO_TEST_CI_CMD_GET_URI = 8,
    EN_AUTO_TEST_CI_CMD_GET_SCRAMBLE_STATUS = 9,
    EN_AUTO_TEST_CI_CMD_GET_SCART_STATUS = 10,
    EN_AUTO_TEST_CI_CMD_GET_LOG_FILE = 11,
    EN_AUTO_TEST_CI_CMD_GET_COPY_PROTECTION = 12,
    EN_AUTO_TEST_CI_CMD_SPDIF_GET_SCMS = 13,
    EN_AUTO_TEST_CI_CMD_CLEAR_LOG_FILE = 14,
    EN_AUTO_TEST_CI_CMD_ADD_CIMMI_EVENT_RECIPIENT = 15,
    EN_AUTO_TEST_CI_CMD_ADD_PVR_CI_PROTECTION_EVENT_RECIPIENT = 16,
    EN_AUTO_TEST_CI_CMD_SET_DTV_AV_MUTE = 17,
    EN_AUTO_TEST_CI_CMD_GET_CURRENT_PROGRAM_LCN = 18,
    EN_AUTO_TEST_CI_CMD_GET_CI_STATUS = 19,
}EN_AUTO_CI_CMD;

typedef enum
{
    E_DTV_UND = 0,
    E_DTV480i_60 = 1,
    E_DTV480p_60 = 2,
    E_DTV576i_50 = 3,
    E_DTV576p_50 = 4,
    E_DTV720p_60 = 5,
    E_DTV720p_50 = 6,
    E_DTV1080i_60 = 7,
    E_DTV1080i_50 = 8,
    E_DTV1080p_60 = 9,
    E_DTV1080p_50 = 10,
    E_DTV1080p_30 = 11,
    E_DTV1080p_24 = 12,
    E_DTV_MAX = 13,
} EN_VIDEO_RESOLUTION;
/*
typedef enum
{
    E_AR_DEFAULT = 0,  // 0
    E_AR_16x9,              // 1
    E_AR_4x3,                // 2
    E_AR_AUTO,             // 3
    E_AR_Panorama,     // 4
    E_AR_JustScan,       // 5
    E_AR_Zoom1,          // 6
    E_AR_Zoom2,          // 7

    E_AR_MAX,
}EN_AspectRatio_Info;
*/
//--------------------------------------------------------
/// OSD relatve AT Cmd para
//--------------------------------------------------------
typedef enum
{
    EN_AUTO_TEST_DIRECT_CMD_OSD_DUMP = 0,
    EN_AUTO_TEST_DIRECT_CMD_OSD_COUNTRY = 14,
    EN_AUTO_TEST_DIRECT_CMD_OSD_LANGUAGE = 15,
    EN_AUTO_TEST_DIRECT_CMD_OSD_AUDIO_PRIMARY_LANGUAGE = 16,
    EN_AUTO_TEST_DIRECT_CMD_OSD_AUDIO_SECONDARY_LANGUAGE = 17,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SUBTITLE_PRIMARY_LANGUAGE = 18,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SUBTITLE_SECONDARY_LANGUAGE = 19,
    EN_AUTO_TEST_DIRECT_CMD_OSD_DETECT = 31,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_PICTURE_CONTRAST = 32,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_PICTURE_BRIGHTNESS = 33,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_PICTURE_SATURATION = 34,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_PICTURE_SHARPNESS = 35,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_PICTURE_HUE = 36,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_PICTURE_BACKLIGHT = 37,
    EN_AUTO_TEST_DIRECT_CMD_OSD_BALANCE = 38,
    EN_AUTO_TEST_DIRECT_CMD_OSD_AUTOVOLUMN = 39,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SYSTEM_LOCK = 40,
    EN_AUTO_TEST_DIRECT_CMD_OSD_UNRATED_LOCK= 41,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_FTA= 42,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_DTV_SIGNAL_STATUS= 43,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_ATV_CHANNEL_NUMBER= 44,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_DTV_CHANNEL_NUMBER= 45,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_DTV_AUDIO_FORMAT= 46,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_VIDEO_INFO= 47,
    EN_AUTO_TEST_DIRECT_CMD_OSD_ACTIVE_TIME= 48,
    EN_AUTO_TEST_DIRECT_CMD_OSD_TRANSPARENCY= 49,
    EN_AUTO_TEST_DIRECT_CMD_OSD_INPUT_BLOCK_ON= 50,
    EN_AUTO_TEST_DIRECT_CMD_OSD_INPUT_BLOCK_OFF= 51,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_RATING_INFO= 52,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_ATV_AUTOSCAN_START_RF= 53,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_DTV_AUTOSCAN_START_RF= 54,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_CHANNEL_INDEX_SHOW_HIDE= 55,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_CHANNEL_SHOW_HIDE= 56,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_RRT_GRAD = 57,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_RRT_RANK = 58,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_RRT_VALUE = 59,
    EN_AUTO_TEST_DIRECT_CMD_OSD_AUDIO_ONLY = 60,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SPDIF_MODE = 61,
    EN_AUTO_TEST_DIRECT_CMD_OSD_AUTO_SLEEP_MODE = 62,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SURROUND_SOUND = 63,
    EN_AUTO_TEST_DIRECT_CMD_OSD_MTS = 64,
    EN_AUTO_TEST_DIRECT_CMD_OSD_DST = 65,
    EN_AUTO_TEST_DIRECT_CMD_OSD_AUTO_SYNC = 66,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_TIME_FORMAT = 67,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_TIME_FORMAT = 68,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SLEEP_TIMER = 69,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_TIME_ZONE = 70,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_TIME_ZONE = 71,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_ON_TIME_MODE = 72,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_ON_TIME_MODE = 73,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_OFF_TIME_MODE = 74,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_OFF_TIME_MODE = 75,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_ON_TIME_HOUR = 76,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_ON_TIME_MIN = 77,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_ON_TIME_INPUT_SOURCE = 78,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_ON_TIME_DTV_CHANNEL = 79,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_OFF_TIME_HOUR = 80,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_OFF_TIME_MIN = 81,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_PICTURE_CONTRAST = 82,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_PICTURE_BRIGHTNESS = 83,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_PICTURE_SATURATION = 84,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_PICTURE_SHARPNESS = 85,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_PICTURE_HUE = 86,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_PICTURE_BACKLIGHT = 87,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_PROGRAMEDIT_CHANNEL_LIST = 88,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_PROGRAMEDIT_DELETE_CHANNEL = 89,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_PROGRAMEDIT_MOVE_CHANNEL = 90,
    EN_AUTO_TEST_DIRECT_CMD_OSD_SET_PROGRAMEDIT_FAVORITE = 91,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_AUTO_SLEEP_MODE = 92,
    EN_AUTO_TEST_DIRECT_CMD_OSD_GET_SLEEP_TIMER = 93,
}EN_AT_OSD_CMD;

typedef enum
{
    EN_AUTO_TEST_EPG_CMD_GET_TIME_MODE = 1,
    EN_AUTO_TEST_EPG_CMD_GET_CHANNEL_MODE = 2,
    EN_AUTO_TEST_EPG_CMD_ADD_NEW_EPG_EVENT = 3,
    EN_AUTO_TEST_EPG_CMD_DELETE_EPG_EVENT = 4,
    EN_AUTO_TEST_EPG_CMD_GET_EVENT_COUNT = 5,
    EN_AUTO_TEST_EPG_CMD_GET_EVENT_BY_INDEX = 6,
    EN_AUTO_TEST_EPG_CMD_GET_DURATION_TIME = 7,
} EN_AT_EPG_CMD;

typedef enum
{
    EN_AUTO_TEST_OAD_GET_SOFT_VERSION = 1,
    EN_AUTO_TEST_OAD_GET_UPGRADE_BAR = 2,
    EN_AUTO_TEST_OAD_CHECK_UPDATE_API = 3,
    EN_AUTO_TEST_OAD_GET_SOFTWARE_UPDATE_OAD = 4,
    EN_AUTO_TEST_OAD_SWITCH_SOFTWARE_UPDATE_OAD = 5,
    EN_AUTO_TEST_OAD_SOFTWARE_UPDATE_USB = 6,
}EN_AUTO_OAD_CMD;

typedef enum
{
    EN_AUTO_TEST_MISC_CLEAR_CMDB = 1,
    EN_AUTO_TEST_MISC_RESET_FACTORY = 2,
    EN_AUTO_TEST_MISC_REBOOT = 3,
    EN_AUTO_TEST_MISC_CLEAR_PROGRAM = 4,
} EN_AT_MISC_CMD;

#if(AT_IR_SIM)
typedef enum _EN_AT_IR_SIM
{
    EN_AT_IR_SIM_NULL,
    EN_AT_IR_SIM_EXIT,
    EN_AT_IR_SIM_LEFT,
    EN_AT_IR_SIM_RIGHT,

    EN_AT_IR_SIM_MAX
}EN_AT_IR_SIM;
#endif

typedef enum _EN_AT_Reply
{
    EN_AT_REPLY_STATUS_ER,
    EN_AT_REPLY_STATUS_OK,
    EN_AT_REPLY_STATUS_TV_INIT,

    EN_AT_REPLY_STATUS_MAX
}EN_AT_Reply;

typedef enum _EN_AT_RESULT
{
    EN_AT_RESULT_ER,
    EN_AT_RESULT_OK,
    EN_AT_RESULT_ONGOING,

    EN_AT_RESULT_MAX
}EN_AT_RESULT;

typedef enum _EN_AT_KEYCODE_MVK
{
    EN_AT_KEYCODE_NULL = 0,
    EN_AT_KEYCODE_MVK_CHANNEL_LIST = 61465,
    EN_AT_KEYCODE_MVK_CHANNEL_RETURN = 61557,
    EN_AT_KEYCODE_MVK_CHANNEL_PLUS = 61510,
    EN_AT_KEYCODE_MVK_CHANNEL_MINUS = 61511,
    EN_AT_KEYCODE_MVK_AUDIO = 61495,
    EN_AT_KEYCODE_MVK_VOLUME_PLUS = 61516,
    EN_AT_KEYCODE_MVK_VOLUME_MINUS = 61517,
    EN_AT_KEYCODE_MVK_UP = 61442,
    EN_AT_KEYCODE_MVK_DOWN = 61443,
    EN_AT_KEYCODE_MVK_LEFT = 61440,
    EN_AT_KEYCODE_MVK_RIGHT = 61441,
    EN_AT_KEYCODE_MVK_POWER = 61455,
    EN_AT_KEYCODE_MVK_EXIT = 61538,
    EN_AT_KEYCODE_MVK_MENU = 61458,
    EN_AT_KEYCODE_MVK_SELECT = 13,
    EN_AT_KEYCODE_MVK_NUM_0 = 48,
    EN_AT_KEYCODE_MVK_NUM_1 = 49,
    EN_AT_KEYCODE_MVK_NUM_2 = 50,
    EN_AT_KEYCODE_MVK_NUM_3 = 51,
    EN_AT_KEYCODE_MVK_NUM_4 = 52,
    EN_AT_KEYCODE_MVK_NUM_5 = 53,
    EN_AT_KEYCODE_MVK_NUM_6 = 54,
    EN_AT_KEYCODE_MVK_NUM_7 = 55,
    EN_AT_KEYCODE_MVK_NUM_8 = 56,
    EN_AT_KEYCODE_MVK_NUM_9 = 57,
    EN_AT_KEYCODE_MVK_MUTE = 61518,
    EN_AT_KEYCODE_MVK_PAGE_UP = 61447,
    EN_AT_KEYCODE_MVK_PAGE_DOWN = 61448,
    EN_AT_KEYCODE_MVK_INFO = 61460,
    EN_AT_KEYCODE_MVK_RED = 61506,
    EN_AT_KEYCODE_MVK_GREEN = 61507,
    EN_AT_KEYCODE_MVK_YELLOW = 61508,
    EN_AT_KEYCODE_MVK_BLUE = 61509,
    EN_AT_KEYCODE_MVK_INPUT_SOURCE = 61544,
    EN_AT_KEYCODE_MVK_EPG = 61467,
    EN_AT_KEYCODE_MVK_MTS = 61552,
    EN_AT_KEYCODE_MVK_TTX = 61546,
    EN_AT_KEYCODE_MVK_SLEEP = 61554,
    EN_AT_KEYCODE_MVK_ZOOM = 61474,
    EN_AT_KEYCODE_MVK_INDEX = 61548,
    EN_AT_KEYCODE_MVK_PLAY = 61521,
    EN_AT_KEYCODE_MVK_PAUSE = 61450,
    EN_AT_KEYCODE_MVK_STOP = 61522,
    EN_AT_KEYCODE_MVK_NEXT = 61532,
    EN_AT_KEYCODE_MVK_PREVIOUS = 61531,
    EN_AT_KEYCODE_MVK_FORWARD = 61513,
    EN_AT_KEYCODE_MVK_BACKWARD = 61559,
    EN_AT_KEYCODE_MVK_CC = 61545,
    EN_AT_KEYCODE_MVK_RECORD = 61526,
    EN_AT_KEYCODE_MVK_SUBTITLE = 61472,
    EN_AT_KEYCODE_MVK_SUBCODE = 61565,
    EN_AT_KEYCODE_MVK_PHOTO = 61551,
    EN_AT_KEYCODE_MVK_FREEZE = 61555,
    EN_AT_KEYCODE_MVK_PIP = 61563,
    EN_AT_KEYCODE_MVK_MIX = 61549,
    EN_AT_KEYCODE_MVK_GUIDE = 61564,
    EN_AT_KEYCODE_MVK_HOLD = 61561,
    EN_AT_KEYCODE_MVK_UPDATE = 61547,
    EN_AT_KEYCODE_MVK_REVEAL = 61556,
    EN_AT_KEYCODE_MVK_SIZE = 61553,
    EN_AT_KEYCODE_MVK_CLOCK = 61558
}EN_AT_KEYCODE_MVK;

typedef enum
{
    EN_AT_AUSTRALIA,    ///< Australia
    EN_AT_AUSTRIA,      ///< Austria
    EN_AT_BELGIUM,      ///< Belgium
    EN_AT_BULGARIA,     ///< Bulgaria
    EN_AT_CROATIA,      ///< Croatia
    EN_AT_CZECH,        ///< Czech
    EN_AT_DENMARK,      ///< Denmark
    EN_AT_FINLAND,      ///< Finland
    EN_AT_FRANCE,       ///< France
    EN_AT_GERMANY,      ///< Germany
    EN_AT_GREECE,       ///< Greece
    EN_AT_HUNGARY,      ///< Hungary
    EN_AT_ITALY,        ///< Italy
    EN_AT_LUXEMBOURG,   ///< Luxembourg
    EN_AT_NETHERLANDS,  ///< Netherland
    EN_AT_NORWAY,       ///< Norway
    EN_AT_POLAND,       ///< Poland
    EN_AT_PORTUGAL,     ///< Portugal
    EN_AT_ROMANIA,      ///< Romania
    EN_AT_RUSSIA,       ///< Russia
    EN_AT_SERBIA,       ///< Serbia
    EN_AT_SLOVENIA,     ///< Slovenia
    EN_AT_SPAIN,        ///< Spain
    EN_AT_SWEDEN,       ///< Sweden
    EN_AT_SWITZERLAND,  ///< Switzerland
    EN_AT_UK,           ///< UK
    EN_AT_NEWZEALAND,   ///< New Zealand
    EN_AT_ARAB,         ///< Arab
    EN_AT_ESTONIA,      ///< Estonia
    EN_AT_HEBREW,       ///< Hebrew
    EN_AT_LATVIA,       ///< Latvia
    EN_AT_SLOVAKIA,     ///< Slovakia
    EN_AT_TURKEY,       ///< Turkey
    EN_AT_IRELAND,      ///< Ireland
    EN_AT_JAPAN,        ///<Japan
    EN_AT_PHILIPPINES,  ///<Philippines
    EN_AT_THAILAND,     ///<Thailand
    EN_AT_MALDIVES,     ///<Maldives
    EN_AT_URUGUAY,      ///<Uruguay
    EN_AT_PERU,         ///<Peru
    EN_AT_ARGENTINA,    ///<Argentina
    EN_AT_CHILE,        ///<Chile
    EN_AT_VENEZUELA,    ///Venezuela
    EN_AT_ECUADOR,      ///<Ecuador
    EN_AT_COSTARICA,    ///<Costarica
    EN_AT_PARAGUAY,     ///<Paraguay
    EN_AT_BOLIVIA,      ///<Bolivia
    EN_AT_BELIZE,       ///<Belize
    EN_AT_NICARAGUA,    ///<Nicaragua
    EN_AT_GUATEMALA,    ///<Guatemala
    EN_AT_CHINA,        ///< China
    EN_AT_TAIWAN,       ///< Taiwan
    EN_AT_BRAZIL,       ///< Brazil
    /* ATSC Country Start */
    EN_AT_CANADA,       ///< Canada
    EN_AT_MEXICO,       ///< Mexico
    EN_AT_US,           ///< United States
    EN_AT_SOUTHKOREA,   ///< South Korea
    /* ATSC Country End */
    EN_AT_FIJI,         ///< Fiji
    EN_AT_UZBEK,        ///< Uzbek
    EN_AT_TAJIKISTAN,   ///< Tajikistan
    EN_AT_ETHIOPIA,     ///< Ethiopia
    EN_AT_AZERBAIJAN,   ///< Azerbaijan
    EN_AT_SOUTHAFRICA,  ///< South Africa
    EN_AT_ALGERIA,      ///< Algeria
    EN_AT_EGYPT,        ///< Egypt
    EN_AT_SAUDI_ARABIA, ///< Saudi Arabia
    EN_AT_IRAN,         ///< Iran
    EN_AT_IRAQ,         ///< Iraq
    EN_AT_NAMIBIA,      ///< Namibia
    EN_AT_JORDAN,       ///< Jordan
    EN_AT_KUWAIT,       ///< Kuwait
    EN_AT_INDONESIA,    ///< Indonesia
    EN_AT_ISRAEL,       ///< Israel
    EN_AT_QATAR,        ///< Qatar
    EN_AT_NIGERIA,      ///< Nigeria
    EN_AT_ZEMBABWE,     ///< Zimbabwe
    EN_AT_LITHUANIA,    ///< Lithuania
    EN_AT_MOROCCO,      ///< Morocco
    EN_AT_TUNIS,        ///< Tunis
    EN_AT_INDIA,        ///< India
    EN_AT_OTHERS,       ///< Others
    // ------------------------------------
    EN_AT_COUNTRY_NUM,
} EN_AT_MEMBER_COUNTRY;

typedef enum//ISO 639: 3-letter codes
{
    E_LANGUAGE_CZECH,
    E_LANGUAGE_CHAMIC,
    E_LANGUAGE_DANISH,
    E_LANGUAGE_DARGWA,
    E_LANGUAGE_LANDDAYAK,
    E_LANGUAGE_GERMAN,
    E_LANGUAGE_ENGLISH,
    E_LANGUAGE_SPANISH,
    E_LANGUAGE_GREEK,
    E_LANGUAGE_FRENCH,
    E_LANGUAGE_CROATIAN,
    E_LANGUAGE_SORBIANUPPER,
    E_LANGUAGE_ITALIAN,
    E_LANGUAGE_HUNGARIAN,
    E_LANGUAGE_DUTCH,
    E_LANGUAGE_NORWEGIAN,
    E_LANGUAGE_POLISH,
    E_LANGUAGE_PORTUGUESE,
    E_LANGUAGE_RUSSIAN,
    E_LANGUAGE_ROMANIAN,
    E_LANGUAGE_SLOVENIAN,
    E_LANGUAGE_SERBIAN,
    E_LANGUAGE_FINNISH,
    E_LANGUAGE_SWEDISH,
    E_LANGUAGE_BULGARIAN,
    E_LANGUAGE_SLOVAK,
    E_LANGUAGE_CHINESE,
    E_LANGUAGE_CHUUKESE,
    E_LANGUAGE_GAELIC,
    E_LANGUAGE_GBAYA,
    E_LANGUAGE_WELSH,
    E_LANGUAGE_ARABIC,
    E_LANGUAGE_IRISH,
    E_LANGUAGE_LATVIAN,
    E_LANGUAGE_HEBREW,
    E_LANGUAGE_TURKISH,
    E_LANGUAGE_ESTONIAN,
    E_LANGUAGE_NETHERLANDS,//no in ISO639
    E_LANGUAGE_KOREAN,
    E_LANGUAGE_KOSRAEAN,
    E_LANGUAGE_HINDI,
    E_LANGUAGE_HITTITE,
    E_LANGUAGE_HMONG,
    E_LANGUAGE_MANDARIN,//no in ISO639
    E_LANGUAGE_CANTONESE,//no in ISO639
    E_LANGUAGE_MAORI,
    E_LANGUAGE_QAA,//no in ISO639
    E_LANGUAGE_UNDETERMINED,//**-- Italy CI Certificate --**//
    E_LANGUAGE_AD,//**-- AD language --**//
    E_LANGUAGE_UNKNOWN,       //move to hear to avoid haveing same value as spanish.
    E_LANGUAGE_NONE,          //move to hear to avoid haveing same value as spanish.

    E_LANGUAGE_ABKHAZIAN,
    E_LANGUAGE_ACHINESE,
    E_LANGUAGE_ACOLI,
    E_LANGUAGE_ADANGME,
    E_LANGUAGE_ADYGHE,
    E_LANGUAGE_AFAR,
    E_LANGUAGE_AFRIHILI,
    E_LANGUAGE_AFRIKAANS,
    E_LANGUAGE_AFRO,
    E_LANGUAGE_AINU,
    E_LANGUAGE_AKAN,
    E_LANGUAGE_AKKADIAN,
    E_LANGUAGE_ALBANIAN,
    E_LANGUAGE_ALEUT,
    E_LANGUAGE_ALGONQUIAN,
    E_LANGUAGE_ALTAISOUTHERN,
    E_LANGUAGE_ALTAIC,
    E_LANGUAGE_AMHARIC,
    E_LANGUAGE_APACHE,
    E_LANGUAGE_ARAMAIC,
    E_LANGUAGE_ARAGONESE,
    E_LANGUAGE_ARAPAHO,
    E_LANGUAGE_ARAUCANIAN,
    E_LANGUAGE_ARAWAK,
    E_LANGUAGE_ARMENIAN,
    E_LANGUAGE_ARTIFICIAL,
    E_LANGUAGE_ASSAMESE,
    E_LANGUAGE_ASTURIAN,
    E_LANGUAGE_ATHAPASCAN,
    E_LANGUAGE_AUSTRONESIAN,
    E_LANGUAGE_AUSTRALIAN,
    E_LANGUAGE_AVARIC,
    E_LANGUAGE_AVESTAN,
    E_LANGUAGE_AWADHI,
    E_LANGUAGE_AYMARA,
    E_LANGUAGE_AZERBAIJANI,
    E_LANGUAGE_AZTEC,
    E_LANGUAGE_BALINESE,
    E_LANGUAGE_BALTIC,
    E_LANGUAGE_BALUCHI,
    E_LANGUAGE_BAMBARA,
    E_LANGUAGE_BAMILEKE,
    E_LANGUAGE_BANDA,
    E_LANGUAGE_BANTU,
    E_LANGUAGE_BASA,
    E_LANGUAGE_BASHKIR,
    E_LANGUAGE_BASQUE,
    E_LANGUAGE_BEJA,
    E_LANGUAGE_BEMBA,
    E_LANGUAGE_BENGALI,
    E_LANGUAGE_BERBER,
    E_LANGUAGE_BHOJPURI,
    E_LANGUAGE_BIHARI,
    E_LANGUAGE_BIKOL,
    E_LANGUAGE_BINI,
    E_LANGUAGE_BISLAMA,
    E_LANGUAGE_BOSNIAN,
    E_LANGUAGE_BRAJ,
    E_LANGUAGE_BRETON,
    E_LANGUAGE_BUGINESE,
    E_LANGUAGE_BURIAT,
    E_LANGUAGE_BURMESE,
    E_LANGUAGE_BLIN,
    E_LANGUAGE_BYELORUSSIAN,
    E_LANGUAGE_CADDO,
    E_LANGUAGE_CARIB,
    E_LANGUAGE_CATALAN,
    E_LANGUAGE_CAUCASIAN,
    E_LANGUAGE_CEBUANO,
    E_LANGUAGE_CELTIC,
    E_LANGUAGE_CENTRALAMERICANINDIAN,
    E_LANGUAGE_CHAGATAI,
    E_LANGUAGE_CHAMORRO,
    E_LANGUAGE_CHECHEN,
    E_LANGUAGE_CHEROKEE,
    E_LANGUAGE_CHEYENNE,
    E_LANGUAGE_CHIBCHA,
    E_LANGUAGE_CHINOOKJARGON,
    E_LANGUAGE_CHOCTAW,
    E_LANGUAGE_CHIPEWYAN,
    E_LANGUAGE_CHURCHSLAVIC,
    E_LANGUAGE_CHUVASH,
    E_LANGUAGE_COPTIC,
    E_LANGUAGE_CORNISH,
    E_LANGUAGE_CORSICAN,
    E_LANGUAGE_CREE,
    E_LANGUAGE_CREEK,
    E_LANGUAGE_CREOLESANDPIDGINS,
    E_LANGUAGE_CRIMEANTATAR,
    E_LANGUAGE_CREOLESANDPIDGINSENGLISH,
    E_LANGUAGE_CREOLESANDPIDGINSFRENCH,
    E_LANGUAGE_CREOLESANDPIDGINSPORTUGUESE,
    E_LANGUAGE_KASHUBIAN,
    E_LANGUAGE_CUSHITIC,
    E_LANGUAGE_DAKOTA,
    E_LANGUAGE_DELAWARE,
    E_LANGUAGE_SLAVEY,
    E_LANGUAGE_DOGRIB,
    E_LANGUAGE_DHIVEHI,
    E_LANGUAGE_DINKA,
    E_LANGUAGE_DIVEHI,
    E_LANGUAGE_DOGRI,
    E_LANGUAGE_DRAVIDIAN,
    E_LANGUAGE_SORBIANLOWER,
    E_LANGUAGE_DUALA,
    E_LANGUAGE_DUTCHMIDDLE,
    E_LANGUAGE_DYULA,
    E_LANGUAGE_DZONGKHA,
    E_LANGUAGE_EFIK,
    E_LANGUAGE_EGYPTIAN,
    E_LANGUAGE_EKAJUK,
    E_LANGUAGE_ELAMITE,
    E_LANGUAGE_ENGLISHMIDDLE,
    E_LANGUAGE_ENGLISHOLD,
    E_LANGUAGE_ANGIKA,
    E_LANGUAGE_ESKIMO,
    E_LANGUAGE_ESPERANTO,
    E_LANGUAGE_EWE,
    E_LANGUAGE_EWONDO,
    E_LANGUAGE_FANG,
    E_LANGUAGE_FANTI,
    E_LANGUAGE_FAROESE,
    E_LANGUAGE_FIJIAN,
    E_LANGUAGE_FILIPINO,
    E_LANGUAGE_FINNOUGRIAN,
    E_LANGUAGE_FON,
    E_LANGUAGE_FRENCHMIDDLE,
    E_LANGUAGE_FRENCHOLD,
    E_LANGUAGE_FRISIANNORTHERN,
    E_LANGUAGE_FRISIANEASTERN,
    E_LANGUAGE_FRISIAN,
    E_LANGUAGE_FULAH,
    E_LANGUAGE_FRIULIAN,
    E_LANGUAGE_GA,
    E_LANGUAGE_GALLEGAN,
    E_LANGUAGE_GANDA,
    E_LANGUAGE_GAYO,
    E_LANGUAGE_GEEZ,
    E_LANGUAGE_GEORGIAN,
    E_LANGUAGE_GERMANMIDDLEHIGH,
    E_LANGUAGE_GERMANOLDHIGH,
    E_LANGUAGE_GORONTALO,
    E_LANGUAGE_GERMANIC,
    E_LANGUAGE_GILBERTESE,
    E_LANGUAGE_GONDI,
    E_LANGUAGE_GOTHIC,
    E_LANGUAGE_GREBO,
    E_LANGUAGE_GREEKANCIENT,
    E_LANGUAGE_GREENLANDIC,
    E_LANGUAGE_GUARANI,
    E_LANGUAGE_SWISSGERMAN,
    E_LANGUAGE_GUJARATI,
    E_LANGUAGE_GWICHIN,
    E_LANGUAGE_HAIDA,
    E_LANGUAGE_HAITIANCREOLE,
    E_LANGUAGE_HAUSA,
    E_LANGUAGE_HAWAIIAN,
    E_LANGUAGE_HERERO,
    E_LANGUAGE_HILIGAYNON,
    E_LANGUAGE_HIMACHALI,
    E_LANGUAGE_HIRIMOTU,
    E_LANGUAGE_HUPA,
    E_LANGUAGE_IBAN,
    E_LANGUAGE_ICELANDIC,
    E_LANGUAGE_IDO,
    E_LANGUAGE_NUOSU,
    E_LANGUAGE_IGBO,
    E_LANGUAGE_IJO,
    E_LANGUAGE_ILOKO,
    E_LANGUAGE_INDIC,
    E_LANGUAGE_INDOEUROPEAN,
    E_LANGUAGE_INGUSH,
    E_LANGUAGE_INDONESIAN,
    E_LANGUAGE_INTERLINGUA,
    E_LANGUAGE_INTERLINGUE,
    E_LANGUAGE_INUKTITUT,
    E_LANGUAGE_INUPIAK,
    E_LANGUAGE_IRANIAN,
    E_LANGUAGE_IRISHOLD,
    E_LANGUAGE_IRISHMIDDLE,
    E_LANGUAGE_IROQUOIAN,
    E_LANGUAGE_JAPANESE,
    E_LANGUAGE_JAVANESE,
    E_LANGUAGE_LOJBAN,
    E_LANGUAGE_JUDEOARABIC,
    E_LANGUAGE_JUDEOPERSIAN,
    E_LANGUAGE_KABYLE,
    E_LANGUAGE_KACHIN,
    E_LANGUAGE_KAMBA,
    E_LANGUAGE_KANNADA,
    E_LANGUAGE_KANURI,
    E_LANGUAGE_KARAKALPAK,
    E_LANGUAGE_KAREN,
    E_LANGUAGE_KASHMIRI,
    E_LANGUAGE_KAWI,
    E_LANGUAGE_KAZAKH,
    E_LANGUAGE_CIRCASSIAN,
    E_LANGUAGE_KHASI,
    E_LANGUAGE_KHMER,
    E_LANGUAGE_KHOISAN,
    E_LANGUAGE_KHOTANESE,
    E_LANGUAGE_KIKUYU,
    E_LANGUAGE_KINYARWANDA,
    E_LANGUAGE_KIRGHIZ,
    E_LANGUAGE_KIMBUNDU,
    E_LANGUAGE_KOMI,
    E_LANGUAGE_KONGO,
    E_LANGUAGE_KONKANI,
    E_LANGUAGE_KPELLE,
    E_LANGUAGE_KARACHAYBALKAR,
    E_LANGUAGE_KARELIAN,
    E_LANGUAGE_KRU,
    E_LANGUAGE_KUANYAMA,
    E_LANGUAGE_KUMYK,
    E_LANGUAGE_KURDISH,
    E_LANGUAGE_KURUKH,
    E_LANGUAGE_KUSAIE,
    E_LANGUAGE_KUTENAI,
    E_LANGUAGE_LADINO,
    E_LANGUAGE_LAHNDA,
    E_LANGUAGE_LAMBA,
    E_LANGUAGE_LANGUE,
    E_LANGUAGE_LAO,
    E_LANGUAGE_LATIN,
    E_LANGUAGE_LETZEBURGESCH,
    E_LANGUAGE_LEZGHIAN,
    E_LANGUAGE_LIMBURGISH,
    E_LANGUAGE_LINGALA,
    E_LANGUAGE_LITHUANIAN,
    E_LANGUAGE_LOZI,
    E_LANGUAGE_LUBALULUA,
    E_LANGUAGE_LUBAKATANGA,
    E_LANGUAGE_LUISENO,
    E_LANGUAGE_LUNDA,
    E_LANGUAGE_LUO,
    E_LANGUAGE_LUSHAI,
    E_LANGUAGE_MACEDONIAN,
    E_LANGUAGE_MADURESE,
    E_LANGUAGE_MAGAHI,
    E_LANGUAGE_MAITHILI,
    E_LANGUAGE_MAKASAR,
    E_LANGUAGE_MALAGASY,
    E_LANGUAGE_MALAY,
    E_LANGUAGE_MOKSHA,
    E_LANGUAGE_MANDAR,
    E_LANGUAGE_MALAYALAM,
    E_LANGUAGE_MALTESE,
    E_LANGUAGE_MANCHU,
    E_LANGUAGE_MANDINGO,
    E_LANGUAGE_MANIPURI,
    E_LANGUAGE_MANOBO,
    E_LANGUAGE_MANX,
    E_LANGUAGE_MARATHI,
    E_LANGUAGE_MARI,
    E_LANGUAGE_MARSHALL,
    E_LANGUAGE_MIRANDESE,
    E_LANGUAGE_MARWARI,
    E_LANGUAGE_MASAI,
    E_LANGUAGE_MAYAN,
    E_LANGUAGE_ERZYA,
    E_LANGUAGE_MENDE,
    E_LANGUAGE_MICMAC,
    E_LANGUAGE_MINANGKABAU,
    E_LANGUAGE_MISCELLANEOUS,
    E_LANGUAGE_MOHAWK,
    E_LANGUAGE_MOLDAVIAN,
    E_LANGUAGE_MONKMER,
    E_LANGUAGE_MONGO,
    E_LANGUAGE_MONGOLIAN,
    E_LANGUAGE_MOSSI,
    E_LANGUAGE_MULTIPLE,
    E_LANGUAGE_MUNDA,
    E_LANGUAGE_NEAPOLITAN,
    E_LANGUAGE_NAURU,
    E_LANGUAGE_NAVAJO,
    E_LANGUAGE_NDEBELENORTH,
    E_LANGUAGE_NDEBELESOUTH,
    E_LANGUAGE_NDONGO,
    E_LANGUAGE_GERMANLOW,
    E_LANGUAGE_NEPALI,
    E_LANGUAGE_NEWARI,
    E_LANGUAGE_NIAS,
    E_LANGUAGE_NIGERKORDOFANIAN,
    E_LANGUAGE_NILOSAHARAN,
    E_LANGUAGE_NIUEAN,
    E_LANGUAGE_NORWEGIANBOKMAL,
    E_LANGUAGE_NOGAI,
    E_LANGUAGE_NORSEOLD,
    E_LANGUAGE_NORTHAMERICANINDIAN,
    E_LANGUAGE_NORWEGIANNYNORSK,
    E_LANGUAGE_NUBIAN,
    E_LANGUAGE_NYAMWEZI,
    E_LANGUAGE_NEWARICLASSICAL,
    E_LANGUAGE_NYANJA,
    E_LANGUAGE_NYANKOLE,
    E_LANGUAGE_NYORO,
    E_LANGUAGE_NZIMA,
    E_LANGUAGE_OJIBWA,
    E_LANGUAGE_ORIYA,
    E_LANGUAGE_OROMO,
    E_LANGUAGE_OSAGE,
    E_LANGUAGE_OSSETIC,
    E_LANGUAGE_OTOMIAN,
    E_LANGUAGE_PAHLAVI,
    E_LANGUAGE_PALAUAN,
    E_LANGUAGE_PALI,
    E_LANGUAGE_PAMPANGA,
    E_LANGUAGE_PANGASINAN,
    E_LANGUAGE_PANJABI,
    E_LANGUAGE_PAPIAMENTO,
    E_LANGUAGE_PAPUANAUSTRALIAN,
    E_LANGUAGE_PERSIAN,
    E_LANGUAGE_PERSIANOLD,
    E_LANGUAGE_PHOENICIAN,
    E_LANGUAGE_PHILIPPINE,
    E_LANGUAGE_PONAPE,
    E_LANGUAGE_PRAKRIT,
    E_LANGUAGE_PROVENCALOLD,
    E_LANGUAGE_PUSHTO,
    E_LANGUAGE_QUECHUA,
    E_LANGUAGE_RHAETOROMANCE,
    E_LANGUAGE_RAJASTHANI,
    E_LANGUAGE_RAPANUI,
    E_LANGUAGE_RAROTONGAN,
    E_LANGUAGE_ROMANCE,
    E_LANGUAGE_ROMANY,
    E_LANGUAGE_RUNDI,
    E_LANGUAGE_AROMANIAN,
    E_LANGUAGE_SALISHAN,
    E_LANGUAGE_SAMARITANARAMAIC,
    E_LANGUAGE_SAMISOUTHERN,
    E_LANGUAGE_SAMINORTHERN,
    E_LANGUAGE_SAMI,
    E_LANGUAGE_LULESAMI,
    E_LANGUAGE_INARISAMI,
    E_LANGUAGE_SAMOAN,
    E_LANGUAGE_SKOLTSAMI,
    E_LANGUAGE_SANDAWE,
    E_LANGUAGE_SANGO,
    E_LANGUAGE_SANSKRIT,
    E_LANGUAGE_SARDINIAN,
    E_LANGUAGE_SASAK,
    E_LANGUAGE_SANTALI,
    E_LANGUAGE_SICILIAN,
    E_LANGUAGE_SCOTS,
    E_LANGUAGE_SELKUP,
    E_LANGUAGE_SEMITIC,
    E_LANGUAGE_SRANANTONGO,
    E_LANGUAGE_SERBOCROATIAN,
    E_LANGUAGE_SERER,
    E_LANGUAGE_SIGN,
    E_LANGUAGE_SHAN,
    E_LANGUAGE_SHONA,
    E_LANGUAGE_SIDAMO,
    E_LANGUAGE_SIKSIKA,
    E_LANGUAGE_SINDHI,
    E_LANGUAGE_SONINKE,
    E_LANGUAGE_SINGHALESE,
    E_LANGUAGE_SINOTIBETAN,
    E_LANGUAGE_SIOUAN,
    E_LANGUAGE_SLAVIC,
    E_LANGUAGE_SISWANT,
    E_LANGUAGE_SOGDIAN,
    E_LANGUAGE_SOMALI,
    E_LANGUAGE_SONGHAI,
    E_LANGUAGE_SORBIAN,
    E_LANGUAGE_WALLOON,
    E_LANGUAGE_NKO,
    E_LANGUAGE_SOTHONORTHERN,
    E_LANGUAGE_SOTHOSOUTHERN,
    E_LANGUAGE_SOUTHAMERICANINDIAN,
    E_LANGUAGE_SUKUMA,
    E_LANGUAGE_SUMERIAN,
    E_LANGUAGE_SUDANESE,
    E_LANGUAGE_SUSU,
    E_LANGUAGE_SWAHILI,
    E_LANGUAGE_SWAZI,
    E_LANGUAGE_SWIZE,
    E_LANGUAGE_SYRIACCLASSICAL,
    E_LANGUAGE_SYRIAC,
    E_LANGUAGE_TAGALOG,
    E_LANGUAGE_TAHITIAN,
    E_LANGUAGE_TETUM,
    E_LANGUAGE_TAJIK,
    E_LANGUAGE_TAMASHEK,
    E_LANGUAGE_TAI,
    E_LANGUAGE_TAMIL,
    E_LANGUAGE_TATAR,
    E_LANGUAGE_TELETEXT,
    E_LANGUAGE_TELUGU,
    E_LANGUAGE_TERENO,
    E_LANGUAGE_THAI,
    E_LANGUAGE_TIBETAN,
    E_LANGUAGE_TIGRE,
    E_LANGUAGE_TIGRINYA,
    E_LANGUAGE_TIMNE,
    E_LANGUAGE_TIVI,
    E_LANGUAGE_KLINGON,
    E_LANGUAGE_TOKELAU,
    E_LANGUAGE_TLINGIT,
    E_LANGUAGE_TONGANYASA,
    E_LANGUAGE_TONGAISLANDS,
    E_LANGUAGE_TRUK,
    E_LANGUAGE_TOKPISIN,
    E_LANGUAGE_TSIMSHIAN,
    E_LANGUAGE_TSONGA,
    E_LANGUAGE_TSWANA,
    E_LANGUAGE_TUMBUKA,
    E_LANGUAGE_TUPIAN,
    E_LANGUAGE_TURKISHOTTOMAN,
    E_LANGUAGE_TURKMEN,
    E_LANGUAGE_TUVINIAN,
    E_LANGUAGE_TUVALU,
    E_LANGUAGE_TWI,
    E_LANGUAGE_UDMURT,
    E_LANGUAGE_UGARITIC,
    E_LANGUAGE_UIGHUR,
    E_LANGUAGE_UKRAINIAN,
    E_LANGUAGE_UMBUNDU,
    E_LANGUAGE_URDU,
    E_LANGUAGE_UZBEK,
    E_LANGUAGE_VAI,
    E_LANGUAGE_VENDA,
    E_LANGUAGE_VIETNAMESE,
    E_LANGUAGE_VOLAPUK,
    E_LANGUAGE_VOTIC,
    E_LANGUAGE_WAKASHAN,
    E_LANGUAGE_WALAMO,
    E_LANGUAGE_WARAY,
    E_LANGUAGE_WASHO,
    E_LANGUAGE_WOLOF,
    E_LANGUAGE_KALMYK,
    E_LANGUAGE_XHOSA,
    E_LANGUAGE_YAKUT,
    E_LANGUAGE_YAO,
    E_LANGUAGE_YAP,
    E_LANGUAGE_YIDDISH,
    E_LANGUAGE_YORUBA,
    E_LANGUAGE_YUPIK,
    E_LANGUAGE_ZAPOTEC,
    E_LANGUAGE_BLISSYMBOLICS,
    E_LANGUAGE_ZENAGA,
    E_LANGUAGE_ZHUANG,
    E_LANGUAGE_ZANDE,
    E_LANGUAGE_ZULU,
    E_LANGUAGE_ZUNI,
    E_LANGUAGE_ZAZAKI,
    E_LANGUAGE_VALENCIAN,
    E_LANGUAGE_NUM,           //Language maximum
    E_LANGUAGE_MAX = 0xFFFF
} EN_AT_MEMBER_LANGUAGE;

typedef enum
{
    EN_AT_INPUT_SOURCE_VGA          = 0, ///<VGA input
    EN_AT_INPUT_SOURCE_ATV          = 1, ///<TV input
    EN_AT_INPUT_SOURCE_CVBS         = 2, ///<AV 1
    EN_AT_INPUT_SOURCE_CVBS2        = 3, ///<AV 2
    EN_AT_INPUT_SOURCE_CVBS3        = 4, ///<AV 3
    EN_AT_INPUT_SOURCE_CVBS4        = 5, ///<AV 4
    EN_AT_INPUT_SOURCE_CVBS5        = 6, ///<AV 5
    EN_AT_INPUT_SOURCE_CVBS6        = 7, ///<AV 6
    EN_AT_INPUT_SOURCE_CVBS7        = 8, ///<AV 7
    EN_AT_INPUT_SOURCE_CVBS8        = 9, ///<AV 8
    EN_AT_INPUT_SOURCE_CVBS_MAX     = 10, ///<AV max
    EN_AT_INPUT_SOURCE_SVIDEO       = 11, ///<S-video 1
    EN_AT_INPUT_SOURCE_SVIDEO2      = 12, ///<S-video 2
    EN_AT_INPUT_SOURCE_SVIDEO3      = 13, ///<S-video 3
    EN_AT_INPUT_SOURCE_SVIDEO4      = 14, ///<S-video 4
    EN_AT_INPUT_SOURCE_SVIDEO_MAX   = 15, ///<S-video max
    EN_AT_INPUT_SOURCE_YPBPR        = 16, ///<Component 1
    EN_AT_INPUT_SOURCE_YPBPR2       = 17, ///<Component 2
    EN_AT_INPUT_SOURCE_YPBPR3       = 18, ///<Component 3
    EN_AT_INPUT_SOURCE_YPBPR_MAX    = 19, ///<Component max
    EN_AT_INPUT_SOURCE_SCART        = 20, ///<Scart 1
    EN_AT_INPUT_SOURCE_SCART2       = 21, ///<Scart 2
    EN_AT_INPUT_SOURCE_SCART_MAX    = 22, ///<Scart max
    EN_AT_INPUT_SOURCE_HDMI         = 23, ///<HDMI 1
    EN_AT_INPUT_SOURCE_HDMI2        = 24, ///<HDMI 2
    EN_AT_INPUT_SOURCE_HDMI3        = 25, ///<HDMI 3
    EN_AT_INPUT_SOURCE_HDMI4        = 26, ///<HDMI 4
    EN_AT_INPUT_SOURCE_HDMI_MAX     = 27, ///<HDMI max
    EN_AT_INPUT_SOURCE_DTV          = 28, ///<DTV
    EN_AT_INPUT_SOURCE_DVI          = 29, ///<DVI 1
    EN_AT_INPUT_SOURCE_DVI2         = 30, ///<DVI 2
    EN_AT_INPUT_SOURCE_DVI3         = 31, ///<DVI 2
    EN_AT_INPUT_SOURCE_DVI4         = 32, ///<DVI 4
    EN_AT_INPUT_SOURCE_DVI_MAX      = 33, ///<DVI max
    // Application source
    EN_AT_INPUT_SOURCE_STORAGE      = 34, ///<Storage
    EN_AT_INPUT_SOURCE_KTV          = 35, ///<KTV
    EN_AT_INPUT_SOURCE_JPEG         = 36, ///<JPEG
    EN_AT_INPUT_SOURCE_NUM          = 37, ///<number of the source

    EN_AT_INPUT_SOURCE_NONE         = EN_AT_INPUT_SOURCE_NUM, ///<NULL input
} EN_AT_INPUT_SOURCE_TYPE;

typedef struct _AT_CMD
{
    MS_U8 u8CmdType;
    MS_U16 u16CmdSubType;
    int iCmdPara[AT_MAX_CMD_PARA];
} AT_CMD;

//===================================================================

INTERFACE BOOLEAN g_AT_bPowerOnFinished;


typedef enum
{
    E_AUTO_TEST_CHANGE_CHANNEL_NONE,
    E_AUTO_TEST_CHANGE_CHANNEL_START,
    E_AUTO_TEST_CHANGE_CHANNEL_END,
} EnuAutoTestChangeChannelState;

INTERFACE EnuAutoTestChangeChannelState g_AT_en8ChangeChannelState;

INTERFACE BOOL  g_AT_bChangeSource;
INTERFACE U32  g_AT_u32ChangeSourceTime;

INTERFACE U32  g_AT_u32UnmuteVideo;

typedef enum
{
    E_AUTO_TEST_TUNING_NONE,
    E_AUTO_TEST_TUNING_WAIT_START,
    E_AUTO_TEST_TUNING_START,
    E_AUTO_TEST_TUNING_END,
} EnuAutoTestTuningState;

INTERFACE EnuAutoTestTuningState g_AT_enATVAutoTuningState;
INTERFACE EnuAutoTestTuningState g_AT_enATVManualTuningState;

#if( ENABLE_DTV )
INTERFACE EnuAutoTestTuningState g_AT_enDTVAutoTuningState;
INTERFACE EnuAutoTestTuningState g_AT_enDTVManualTuningState;
#endif


#define ENABLE_AT_DEBUG_INPUT_SIGNAL    1
#if(ENABLE_AT_DEBUG_INPUT_SIGNAL)
INTERFACE BOOL g_AT_bDebugInputSignal;
#endif


#define AT_LOG(str) do{\
    msDebug_ANSI_SetColorText_2(E_FONT_COLOR_YELLOW, E_FONT_BACKGROUND_COLOR_BLUE);\
    printf("AT: %s at %u %s\n", str, g_AT_u32ChangeSourceTime, ANSI_COLOR_RESET );\
} while(0)


//---------------------------------------------------------------------------
//      Function Prototype
//---------------------------------------------------------------------------
void MApp_AT_Init(void);

BOOL MApp_AT_Is_AutoTestActive(void);
BOOL MApp_AT_Is_NeedDisableOtherUartFunction(void);

void MApp_AT_Msg_Add(const U8* pcMsg);
void MApp_AT_Msg_Add__AndAppendNewLine(const U8* pcMsg);


void MApp_AT_RecvDataHandler(int c);
void MApp_AT_Task(void);

BOOL MApp_AT_Get_SimuIRKey(U8 *pu8IrKey);


U32 MApp_AT_Get_AtvManualTuneFreq(void);
U16 MApp_AT_Get_DtvManualTuneChannelNumber(void);

U16 MApp_AT_Get_SymbolSetting(void);
U16 MApp_AT_Get_QamSetting(void);

#if (ENABLE_SUBTITLE)
EN_AT_RESULT _MApp_AT_SubtitleCmdHandler(AT_CMD ATCmd);
#endif
EN_AT_RESULT _MApp_AT_OSDCmdHandler(AT_CMD ATCmd);
EN_AT_RESULT _MApp_AT_SICmdHandler(AT_CMD ATCmd);
EN_AT_RESULT _MApp_AT_AudioCmdHandler(AT_CMD ATCmd);
EN_AT_RESULT _MApp_AT_EPGCmdHandler(AT_CMD ATCmd);
EN_AT_RESULT _MApp_AT_CICmdHandler(AT_CMD ATCmd);

#if (ENABLE_DTV)
MEMBER_SI_SERVICETYPE MApp_AT_ConvertSeviceToSI(MEMBER_SERVICETYPE mServiceType);
void DisplayVideoType(const VIDEO_TYPE enVideoType);
#endif

EN_LANGUAGE MApp_AT_ConvertATLangToENLang(EN_AT_MEMBER_LANGUAGE mLan);
MEMBER_COUNTRY MApp_AT_ConvertATCountryToMemCountry(const EN_AT_MEMBER_COUNTRY enCountry);
void DisplayLanguage(const EN_LANGUAGE enLan);
void DisplayCountry(const MEMBER_COUNTRY enCountry);
void DisplayServiceType(const MEMBER_SERVICETYPE enServiceType);
void DisplayAudioType(const AUDIOSTREAM_TYPE enAudioType);
EN_VIDEO_RESOLUTION ResolutionRemapping(MS_U16 u16HorSize, MS_U16 u16VerSize, MS_U8 u8Interlace, MS_U32 u32FrameRate);
void DisplayResolution(const EN_VIDEO_RESOLUTION enResolution);
void GetGenreType(MS_U8 u8Type, char* pstr);
U32 msAPI_U16BufToU8Buf(U16* pu16Buf, U8* pu8Buf, U32 u32Size);

//--------------------------------------------------------------------------------

typedef enum
{
    E_AT_EVENT_BOOT_TIME_START,
    E_AT_EVENT_BOOT_TIME_END,

    E_AT_EVENT_CHANGE_CHANNEL_TIME_START,
    E_AT_EVENT_CHANGE_CHANNEL_TIME_END,

    E_AT_EVENT_ATV_AUTO_SCAN_FINISH,
    E_AT_EVENT_ATV_MANUAL_SCAN_FINISH,

#if(ENABLE_DTV)
    E_AT_EVENT_DTV_AUTO_SCAN_FINISH,
    E_AT_EVENT_DTV_MANUAL_SCAN_FINISH,
#endif
    E_AT_EVENT_CHANGE_SOURCE_UNMUTE,
    E_AT_EVENT_CHANGE_SOURCE_NO_SIGNAL
} EnuAutoTestEvent;

void MApp_AT_SendEvent(EnuAutoTestEvent enATEvent, void* pvInfo);

//--------------------------------------------------------------------------------

#else

#define AT_LOG(str)

#endif

#undef INTERFACE

#endif //MAPP_AUTOTEST_H

